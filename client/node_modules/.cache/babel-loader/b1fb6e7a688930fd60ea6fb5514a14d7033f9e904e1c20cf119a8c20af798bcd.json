{"ast":null,"code":"var _jsxFileName = \"F:\\\\AI\\\\myRepository\\\\ChatGPT\\\\client\\\\src\\\\components\\\\ChatBoxContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ChatContainer from \"./ChatContainer\";\nimport sendBtn from \"../assets/SVGs/send.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBoxContainer = _ref => {\n  _s();\n  let {\n    chatLog,\n    setChatLog\n  } = _ref;\n  const [userInput, setUserInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatLog]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newChatLogData = [...chatLog, {\n      user: \"human\",\n      message: `${userInput}`\n    }];\n    setUserInput(\"\");\n    setChatLog(newChatLogData);\n    const messages = newChatLogData.map(message => message.message).join(\"\\n\");\n    const response = await fetch(\"https://helpai-chatgpt-clone.onrender.com\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: messages\n      })\n    });\n    const data = await response.json();\n    setChatLog([...newChatLogData, {\n      user: \"gpt\",\n      message: `${data.message}`\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-log\",\n      children: [chatLog.map((item, i) => /*#__PURE__*/_jsxDEV(ChatContainer, {\n        ...item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-holder\",\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          width: \"92%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          className: \"chat-input-textarea\",\n          placeholder: \"Ask Me Anthing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"5%\",\n          backgroundColor: \"transparent\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"sendBtn\",\n          src: sendBtn,\n          alt: \"send form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBoxContainer, \"JrfNyqIOcvx3E5e4CKs+qXf+PBc=\");\n_c = ChatBoxContainer;\nexport default ChatBoxContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatBoxContainer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatContainer","sendBtn","ChatBoxContainer","chatLog","setChatLog","userInput","setUserInput","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","newChatLogData","user","message","messages","map","join","response","fetch","method","headers","body","JSON","stringify","data","json","item","i","display","width","target","value","backgroundColor"],"sources":["F:/AI/myRepository/ChatGPT/client/src/components/ChatBoxContainer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ChatContainer from \"./ChatContainer\";\r\nimport sendBtn from \"../assets/SVGs/send.svg\";\r\n\r\nconst ChatBoxContainer = ({ chatLog, setChatLog }) => {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chatLog]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newChatLogData = [\r\n      ...chatLog,\r\n      { user: \"human\", message: `${userInput}` },\r\n    ];\r\n\r\n    setUserInput(\"\");\r\n    setChatLog(newChatLogData);\r\n\r\n    const messages = newChatLogData\r\n      .map((message) => message.message)\r\n      .join(\"\\n\");\r\n    const response = await fetch(\"https://helpai-chatgpt-clone.onrender.com\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        message: messages,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n\r\n    setChatLog([\r\n      ...newChatLogData,\r\n      { user: \"gpt\", message: `${data.message}` },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chat-log\">\r\n        {chatLog.map((item, i) => (\r\n          <ChatContainer key={i} {...item} />\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"chat-input-holder\" style={{display:\"flex\"}}>\r\n        <form onSubmit={handleSubmit} style={{width:\"92%\"}}>\r\n          <input\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            className=\"chat-input-textarea\"\r\n            placeholder=\"Ask Me Anthing...\"\r\n          ></input>\r\n        </form>\r\n        <button style={{width:\"5%\",backgroundColor:\"transparent\"}}>\r\n          <img className=\"sendBtn\" src={sendBtn} alt=\"send form\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBoxContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,yBAAyB;AAAC;AAE9C,MAAMC,gBAAgB,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAAEC,OAAO;IAAEC;EAAW,CAAC;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,cAAc,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMS,cAAc,GAAG,MAAM;IAAA;IAC3B,yBAAAD,cAAc,CAACE,OAAO,0DAAtB,sBAAwBC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdU,cAAc,EAAE;EAClB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,cAAc,GAAG,CACrB,GAAGZ,OAAO,EACV;MAAEa,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAG,GAAEZ,SAAU;IAAE,CAAC,CAC3C;IAEDC,YAAY,CAAC,EAAE,CAAC;IAChBF,UAAU,CAACW,cAAc,CAAC;IAE1B,MAAMG,QAAQ,GAAGH,cAAc,CAC5BI,GAAG,CAAEF,OAAO,IAAKA,OAAO,CAACA,OAAO,CAAC,CACjCG,IAAI,CAAC,IAAI,CAAC;IACb,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBV,OAAO,EAAEC;MACX,CAAC;IACH,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElCzB,UAAU,CAAC,CACT,GAAGW,cAAc,EACjB;MAAEC,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAG,GAAEW,IAAI,CAACX,OAAQ;IAAE,CAAC,CAC5C,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,UAAU;MAAA,WACtBd,OAAO,CAACgB,GAAG,CAAC,CAACW,IAAI,EAAEC,CAAC,kBACnB,QAAC,aAAa;QAAA,GAAaD;MAAI,GAAXC,CAAC;QAAA;QAAA;QAAA;MAAA,QACtB,CAAC,eACF;QAAK,GAAG,EAAExB;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB,eACN;MAAK,SAAS,EAAC,mBAAmB;MAAC,KAAK,EAAE;QAACyB,OAAO,EAAC;MAAM,CAAE;MAAA,wBACzD;QAAM,QAAQ,EAAEpB,YAAa;QAAC,KAAK,EAAE;UAACqB,KAAK,EAAC;QAAK,CAAE;QAAA,uBACjD;UACE,KAAK,EAAE5B,SAAU;UACjB,QAAQ,EAAGQ,CAAC,IAAKP,YAAY,CAACO,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAE;UAC9C,SAAS,EAAC,qBAAqB;UAC/B,WAAW,EAAC;QAAmB;UAAA;UAAA;UAAA;QAAA;MACxB;QAAA;QAAA;QAAA;MAAA,QACJ,eACP;QAAQ,KAAK,EAAE;UAACF,KAAK,EAAC,IAAI;UAACG,eAAe,EAAC;QAAa,CAAE;QAAA,uBACxD;UAAK,SAAS,EAAC,SAAS;UAAC,GAAG,EAAEnC,OAAQ;UAAC,GAAG,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAClD;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAjEIC,gBAAgB;AAAA,KAAhBA,gBAAgB;AAmEtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}