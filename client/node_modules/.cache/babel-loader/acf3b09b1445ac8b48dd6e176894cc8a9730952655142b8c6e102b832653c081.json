{"ast":null,"code":"var _jsxFileName = \"F:\\\\AI\\\\myRepository\\\\chatBot-openAI\\\\client\\\\src\\\\components\\\\ChatContainer.jsx\";\nimport React from \"react\";\nimport TypeWriterEffect from \"react-typewriter-effect\";\nimport bot from \"../assets/SVGs/bot.svg\";\nimport human from \"../assets/SVGs/user.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatMessage = _ref => {\n  let {\n    message,\n    user\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      id: user === \"gpt\" ? \"chatBotInputDivStyle\" : \"userInputDivStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        style: {\n          background: user === \"gpt\" ? \"#0da37f\" : \"#71059b\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user === \"gpt\" ? bot : human,\n          alt: user === \"gpt\" ? \"bot\" : \"human\" // set chatbot or user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [user === \"gpt\" && /*#__PURE__*/_jsxDEV(TypeWriterEffect, {\n          textStyle: {\n            fontFamily: \"Inter, Avenir, Helvetica, Arial, sans-serif\",\n            fontSize: \"16px\",\n            fontWeight: \"400\",\n            lineHeight: \"24px\",\n            fontSynthesis: \"none\"\n          },\n          startDelay: 100,\n          cursorColor: \"black\",\n          text: message,\n          typeSpeed: 20,\n          eraseSpeed: 100,\n          hideCursorAfterText: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: user === \"human\" && message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","TypeWriterEffect","bot","human","ChatMessage","message","user","background","fontFamily","fontSize","fontWeight","lineHeight","fontSynthesis"],"sources":["F:/AI/myRepository/chatBot-openAI/client/src/components/ChatContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport TypeWriterEffect from \"react-typewriter-effect\";\r\nimport bot from \"../assets/SVGs/bot.svg\";\r\nimport human from \"../assets/SVGs/user.svg\";\r\n\r\nconst ChatMessage = ({ message, user }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"chat-message\"\r\n        id={user === \"gpt\" ? \"chatBotInputDivStyle\" : \"userInputDivStyle\"}\r\n      >\r\n        <div\r\n          className=\"avatar\"\r\n          style={{ background: user === \"gpt\" ? \"#0da37f\" : \"#71059b\" }}\r\n        >\r\n          <img\r\n            src={user === \"gpt\" ? bot : human}\r\n            alt={user === \"gpt\" ? \"bot\" : \"human\"} // set chatbot or user\r\n          />\r\n        </div>\r\n        <div className=\"message\">\r\n          {user === \"gpt\" && (\r\n            <TypeWriterEffect\r\n              textStyle={{\r\n                fontFamily: \"Inter, Avenir, Helvetica, Arial, sans-serif\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"400\",\r\n                lineHeight: \"24px\",\r\n                fontSynthesis: \"none\",\r\n              }}\r\n              startDelay={100}\r\n              cursorColor=\"black\"\r\n              text={message}\r\n              typeSpeed={20}\r\n              eraseSpeed={100}\r\n              hideCursorAfterText=\"true\"\r\n            />\r\n          )}\r\n          {<div className=\"message\">{user === \"human\" && message}</div>}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,OAAOC,GAAG,MAAM,wBAAwB;AACxC,OAAOC,KAAK,MAAM,yBAAyB;AAAC;AAAA;AAE5C,MAAMC,WAAW,GAAG,QAAuB;EAAA,IAAtB;IAAEC,OAAO;IAAEC;EAAK,CAAC;EACpC,oBACE;IAAA,uBACE;MACE,SAAS,EAAC,cAAc;MACxB,EAAE,EAAEA,IAAI,KAAK,KAAK,GAAG,sBAAsB,GAAG,mBAAoB;MAAA,wBAElE;QACE,SAAS,EAAC,QAAQ;QAClB,KAAK,EAAE;UAAEC,UAAU,EAAED,IAAI,KAAK,KAAK,GAAG,SAAS,GAAG;QAAU,CAAE;QAAA,uBAE9D;UACE,GAAG,EAAEA,IAAI,KAAK,KAAK,GAAGJ,GAAG,GAAGC,KAAM;UAClC,GAAG,EAAEG,IAAI,KAAK,KAAK,GAAG,KAAK,GAAG,OAAQ,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;MACvC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,WACrBA,IAAI,KAAK,KAAK,iBACb,QAAC,gBAAgB;UACf,SAAS,EAAE;YACTE,UAAU,EAAE,6CAA6C;YACzDC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,KAAK;YACjBC,UAAU,EAAE,MAAM;YAClBC,aAAa,EAAE;UACjB,CAAE;UACF,UAAU,EAAE,GAAI;UAChB,WAAW,EAAC,OAAO;UACnB,IAAI,EAAEP,OAAQ;UACd,SAAS,EAAE,EAAG;UACd,UAAU,EAAE,GAAI;UAChB,mBAAmB,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAE7B,eACA;UAAK,SAAS,EAAC,SAAS;UAAA,UAAEC,IAAI,KAAK,OAAO,IAAID;QAAO;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACzD;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;AAEP,CAAC;AAAC,KAvCID,WAAW;AAyCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}